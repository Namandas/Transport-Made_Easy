<html>
  <head>
    <title>Bus Subscription</title>
    <style>
    /* General Styles */
body {
  font-family: Arial, sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0;
  background-color: #f4f4f4;
}

.container {
  width: 80%;
  margin: 0 auto;
  overflow: hidden;
}

/* Map Styles */
#map {
  height: 400px;
  width: 100%;
  margin-bottom: 20px;
  border: 1px solid #ccc;
  border-radius: 5px;
}

/* Payment Form Styles */
h1 {
  text-align: center;
  font-size: 24px;
  margin-bottom: 15px;
}

form {
  text-align: center;
  background: #fff;
  padding: 20px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.amount-display {
  text-align: center;
  font-size: 20px;
  margin-bottom: 15px;
  color: #333;
}

.amount-display span {
  font-weight: bold;
  color: #007bff; 
}

input[type='hidden'] {
  display: none;
}

.pay-button {
  padding: 10px 15px;
  background-color: #007bff;
  color: #fff;
  border: 1px solid transparent;
  border-radius: 3px;
  cursor: pointer;
  font-size: 16px;
  transition: all 0.3s ease;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
}

.pay-button:hover {
  background-color: #0056b3;
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}
      </style>
  </head>
  <body>
    <div id="map"></div>
                <input type="hidden" id="startLat" value="<%= start.lat %>">
                <input type="hidden" id="startLng" value="<%= start.lng %>">
                <input type="hidden" id="endLat" value="<%= end.lat %>">
                <input type="hidden" id="endLng" value="<%= end.lng %>">
                <input type="hidden" id="waypoints" value='<%= JSON.stringify(waypoints) %>'>
                <script>
                    function initializeMap() {
                    // Retrieve values from hidden input fields
                    const start = {
                        lat: parseFloat(document.getElementById("startLat").value),
                        lng: parseFloat(document.getElementById("startLng").value)
                    };
                    const end = {
                        lat: parseFloat(document.getElementById("endLat").value),
                        lng: parseFloat(document.getElementById("endLng").value)
                    };
                    const waypointsDataString = document.getElementById("waypoints").value;
                    const waypointsData = JSON.parse(waypointsDataString);

                    // Transform the array into the required waypoint format
                    var waypointArr = [];
                    for (var i = 0; i < waypointsData.length; i++) {
                        waypointArr.push({
                        location: {
                            lat: parseFloat(waypointsData[i].lat),
                            lng: parseFloat(waypointsData[i].lng)
                        },
                        stopover: true
                        });
                    }
                    console.log(waypointArr);
                    // Map initialization code using retrieved values
                    const map = new google.maps.Map(document.getElementById("map"), {
                        center: start,
                        zoom: 10
                    });

                    const directionsService = new google.maps.DirectionsService();
                    const directionsRenderer = new google.maps.DirectionsRenderer({
                        map: map,
                        suppressMarkers: true
                    });

                    const request = {
                        origin: start,
                        destination: end,
                        waypoints: waypointArr,
                        optimizeWaypoints: true,
                        travelMode: google.maps.TravelMode.DRIVING,
                    };

                    directionsService.route(request, function (response, status) {
                        if (status === 'OK') {
                        directionsRenderer.setDirections(response);

                        // Suppress default markers for origin and destination
                        

                        // Create markers for origin and destination without default markers
                        const originMarker = new google.maps.Marker({
                            position: start,
                            map: map,
                            icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png', // Example: Green dot icon for origin
                            title: 'Origin',
                        });
                        for(var i=0;i<waypointArr.length;i++) { 
                            const waypointMarker = new google.maps.Marker({
                            position: waypointArr[i].location,
                            map: map,
                            icon: 'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png', // Example: Green dot icon for origin
                            title: 'way',
                            });
                        }//
                        const destMarker = new google.maps.Marker({
                            position: end,
                            map: map,
                            icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png', // Example: Yellow dot icon for destination
                            title: 'Destination'
                        });
                        } else {
                        window.alert('Directions request failed due to ' + status);
                        }
                    });
                    }

                    // Call the map initialization function when the page loads
                    window.onload = function () {
                        const apiKey = '<%= apiKey %>';
                        const apiUrl = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initializeMap`;
                
                        const script = document.createElement('script');
                        script.src = apiUrl;
                        script.defer = true;
                        script.async = true;
                
                        document.head.appendChild(script);
                    };
                </script>
    </div>
    <h1>Make a Payment</h1>
    <form id="paymentForm" action="/create_order" method="POST">
      <p class="amount-display">Amount: â‚¹<span id="amountDisplay"><%= amount %></span></p>
      <input type="hidden" id="amount" value="<%= amount %>">
      <button class= "pay-button" type="submit">Pay Now</button>
    </form>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
      const form = document.getElementById('paymentForm');
      form.addEventListener('submit', async (event) => {
        event.preventDefault();
        const amount = document.getElementById('amount').value;

        const response = await fetch('/create_order', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ amount }),
        });
        const data = await response.json();

        var options = {
          key: 'rzp_test_IXvYV0XJbAopd8',
          amount: data.amount,
          currency: 'INR',
          name: 'Your Company',
          description: 'Test Payment',
          image: 'https://via.placeholder.com/150',
          order_id: data.id,
          handler : function(response){
            window.open('/login');
          },
          prefill: {
            name: 'Test User',
            email: 'test@example.com',
            contact: '9999999999',
          },
        };
        const rzp = new Razorpay(options);
        rzp.open();
      });
    </script>
  </body>
</html>
